[{"id":"f6409a36145189af810670fe94a1756c","title":"【Github问题解决】解决Github：fatal:unable to access","content":"\n\n\n\n\n\n\n\n\n在平时的开发过程中，我们经常需要将本地项目上传到仓库进行协作发布等，Github作为全球最大的社交编程及代码托管网站是我们最常用的项目托管平台，通过Git命令进行本地和远端的同步是第一步\n问题描述Git相关的命令在CSDN等网站上都有详细介绍，下面这篇文章介绍的就很细致,从建立仓库到最后的上传完成所有的常用的Git命令都有介绍https://blog.csdn.net/Matcha_ice_cream&#x2F;article&#x2F;details&#x2F;124895398接下来要介绍的问题是关于在本地与远端协同的时候，无论是clone还是pull、push都会遇到以下问题：\n\n\n\n\n\n\n\n\n\nfatal: unable to access ‘https://github.com/…/.git’: Could not resolve host: github.com 错误；提示无法解析主机github.com；\n问题原因后来发现问题的根源出在使用了proxy代理，所以要解决该问题，核心操作就是要取消代理\n问题解决Git取消代理当出现以上报错的时候，你第一步可以采取的方法就是通过以下Git命令取消proxy代理，然后再回到你前面要执行的步骤解决：通过git取消代理：\ngit config --global --unset http.proxy\ngit config --global --unset https.proxy\n\nSSH密钥我以没有创建SSH密钥的步骤从头开始，创建好的可以自行跳转到相应步骤阅读食用\n1.创建SSH密钥右键 -&gt; Git Bash Here，设置用户名和邮箱\ngit config --global user.name \"GitHub 用户名\"\ngit config --global user.email \"GitHub 邮箱\"\n\n创建 SSH 密匙：输入以下命令，然后一路回车\nssh-keygen -t rsa -C \"GitHub 邮箱\"\n\n添加密匙：进入 [C:\\Users\\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。\n登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。\nTitle 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。\n验证连接：在克隆仓库时，如下图所示，在仓库code处复制以下内容，打开 Git Bash，输入以下指令：\ngit clone git@github.com:用户名/仓库名.git\n\n这样显示clone成功后，就再也不用担心代理问题了。\n后记关于Github代理问题就介绍到这里，希望大家都能在看了本次分享后都能成功解决问题，如果有其他的问题也可以在评论区留言或私信哦。\n","slug":"【Github问题解决】解决Github：fatal-unable-to-access-‘https-github-com-git‘-Could-not-resolve-host-git","date":"2023-08-29T10:32:13.000Z","categories_index":"Software","tags_index":"Git,Github","author_index":"KKfrank"},{"id":"6a56833218517b845ffd222dd9a495f3","title":"69关打通Html基础（freeCodeCamp（🔥）实践笔记之CatPhotoApp）","content":"前言​\t\t从大一下开始接触前端，发现前端是所见即所得，刚写完的代码下一秒已经在浏览器里面呈现，之后跟着一位研究生学长完成了大学以来的第一个项目，项目的结果并不一定多么出色，但回顾完成项目的过程确是非常有意义的，无论是对前端三大件和Vue的熟悉还是Git命令的操作，抑或是学长的教诲、伙伴之间的合作，那一个个晚上在实验室的联调测试犹然在眼前浮现。\n​\t\t抛开回忆杀，我们切入前端学习的正题，在项目的一步步推进中，我越来越觉得前端是充满创造力的，开始的我可能觉得通过代码放了一张图片，放了可以点击跳转的按钮是多么的有意思，渐渐的当整个网页加载在我面前时却会发现它是如此地不协调，或者简单地说就是好丑。是的，前端需要你去掌握扎实的编程基础也需要你的想象力去构建$Beautiful$的页面。当时的我想象不足，技术有差，不会的都是依靠AI辅助。\n​\t但这个暑假，我，再一次回到前端的，从最基础的开始，不停的学习前端无边无际的知识和技术。✊最近发现一个前端免费学习的宝藏网站freeCodeCamp（🔥）—官方版（英文）|中文社区版。里面的课程很全面，主要以实战编程联系为主，题目不难，很适合刚入门或者用来巩固，接下来就根据freeCodeCamp来写前端博客笔记。除了练手，通过测试还能获得平台发布的各种证书，无论这些证书是否对我们有一定价值，但能获得多一张总不是坏事吧。😀好了，接下来就让我们进入第一关——CatPhotoApp\n\n理解Html\n\n\n\n\n\n\n\n\nHTML 是什么？HTML 的全称是 HyperText Markup Language（超文本标签语言），它是一种用来描述网页结构的标签语言。它采用一种特殊的语法或符号来组织网页的内容，元素通常都有开始标签和结束标签，例如标题、段落、列表。\nHTML 就等同于我们人体里面的骨架，一块一块骨头（标签）组装起来建立起一个人的骨架和结构。比如说经常可以见到的head，body，footer等标签，就等同于一个人的头，身体和脚。那其他的标签比如h1，h2，div，section和ul，li等标签就是用来组建我们人体每一个部位的小骨头。\nHtml头部信息我们在开始写Html语言之前都会写类似于下面这样一段代码，很多人可能写了很久也不知道它到底起了什么作用（反正能用就行可能是很多人的想法😉，说真的如果开始的时候没去搞懂，到后面代码写的顺溜了更加懒得去看了）\n&lt;!DOCTYPE html>\n&lt;html lang=\"en\">\n\n&lt;head>\n    &lt;meta charset=\"UTF-8\">\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    &lt;title>CatPhotoApp&lt;/title>\n&lt;/head>\n\n\n第一行的&lt;!DOCTYPE html&gt;是进行文档类型声明，作用就是告诉浏览器使用那种html来显示网页，我们这个语句的意思就是当前页面采取的是HTML5版本来显示网页，以后直接用就行\nhtml lang=&quot;en&quot;用来定义当前文档的语言，其中en为英语，zh-CN为简体中文，其实对于文档显示来说，定义en的文档也可以显示中文，定义zh-CN的文档也可以显示英文，这个书写对浏览器和搜索引擎（百度，谷歌等）还是有作用的。下面这个搜索框就是中文与其他语言的区别了。\n\n\n\n字符集（Character set）是多个字符的集合。以便计算机能够识别和存储各种文字。在标签内，可以通过标签的charset属性来规定HTML文档应该使用哪种字符编码。上面语法是必须要写的代码，否则可能引起乱码的情况。一般情况下，统一使用“UTF-8”编码，尽量统一写成标准的”UTF-8”，不要写成”utf8”或”UTF8”。\n&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\n以上两行代码告诉浏览器，网页应该以确保IE浏览器使用最新渲染，设备的宽度作为初始宽度，并且初始缩放比例为 1.0。这有助于确保网页在移动设备上以合适的大小和比例呈现，提供更好的用户体验。\n\n\n常见的文本元素1、h1~h6标题元素标题（Heading）：是通过 &lt;h1&gt;~&lt;h6&gt; 等标签进行定义的，&lt;h1&gt;定义最大的标题。&lt;h6&gt;定义最小的标题。在我们CatPhotoApp中我们会用到以下标题元素\n&lt;h1>CatPhotoApp&lt;/h1>\n&lt;h2>Cat Photos&lt;/h2>\n&lt;h2>Cat Lists&lt;/h2>\n&lt;h3>Things cats love:&lt;/h3>\n&lt;h3>Top 3 things cats hate:&lt;/h3>\n&lt;h2>Cat Form&lt;/h2>\n\n\n注意：\n\n确保将 HTML heading 标签只用于标题。不要仅仅是为了产生粗体或大号的文本而使用标题。\n搜索引擎使用标题为您的网页的结构和内容编制索引。\n因为用户可以通过标题来快速浏览您的网页，所以用标题来呈现文档结构是很重要的。\n应该将 h1 用作主标题（最重要的），其后是 h2（次重要的），再其次是 h3，以此类推。\n\n2、P元素段落：是通过&lt;p&gt;标签定义的，可以把 HTML 文档分割为若干段落。\n&lt;p>\n        &lt;span>See more&lt;/span>\n        &lt;a href=\"Free Cat Photo App\">cat photos&lt;/a>\n        &lt;span>in our gallery.&lt;/span>\n&lt;/p>\n\n3、strong 与 em 元素&lt;strong&gt; 标签把文本定义为语气更强的强调的内容。&lt;strong&gt; 标签和 [&lt;em&gt; 标签]一样，用于强调文本，但它强调的程度更强一些。\n&lt;em&gt; 标签把文本定义为强调的内容。&lt;em&gt; 标签告诉浏览器把其中的文本表示为强调的内容。对于所有浏览器来说，这意味着要把这段文字用斜体来显示。\n&lt;!-- 其中&lt;br>是换行作用 -->\n&lt;br>&lt;span>Cats &lt;em>love&lt;/em> lasagna.&lt;/span>\n&lt;br>&lt;span>Cats &lt;strong>hate&lt;/strong> other cats.&lt;/span>\n\n4、b 与 i 元素&lt;b&gt;标签呈现粗体文本效果。&lt;b&gt; 标签和基于内容的样式标签 [&lt;strong&gt;] 类似。它告诉浏览器将包含其中的文本以粗体字显示。\n&lt;i&gt;标签显示斜体文本效果。&lt;i&gt; 标签和基于内容的样式标签 [&lt;em&gt;] 类似。它告诉浏览器将包含其中的文本以斜体字（italic）或者倾斜（oblique）字体显示。\n图像标签和路径1、图片标签&lt;img src=\"https://cdn.freecodecamp.org/curriculum/cat-photo-app/lasagna.jpg\" alt=\"Cats love lasagna.\" />\n\n\n\n在我们CatPhotoApp就会用到以上标签来映入图片，此图片的路径来源于网址，是一个绝对路径。\n标签相关属性:\n\nsrc：路径（图片的地址与名字）\nalt：规定图像的替代文本\nwidth：规定图像的宽度\nheight: 规定图像的高度\ntitle : 鼠标悬停在图片上给予提示\n\n2、相对路径以引用文件所在位置为参考基础，而建立出的目录路径。这里简单地说，路径就是图片相对于页面 的位置。\n\n\n\n相对路径分类\n符号\n说明\n\n\n\n同一级路径\n\n图像文件位于HTML文件同一级 如&lt;img src=&quot;baidu.gif&quot; /&gt;\n\n\n下一级路径\n&#x2F;\n图像文件位于HTML文件下一级 如&lt;img src=&quot;baidu.gif&quot; /&gt;\n\n\n上一级路径\n..&#x2F;\n图像文件位于HTML文件上一级 如&lt;img src=&quot;baidu.gif&quot; /&gt;\n\n\n相对路径是从代码所在的这个文件出发，去寻找目标文件的，而我们这里所说的上一级、下一级和同一级就是图片相对于HTML页面的位置。\n3、绝对路径是指目录下的绝对位置（唯一存在的），直接到达目标位置，通常是从盘符开始的路径。\n例如，文件在电脑中的哪一个位置&quot;D:\\\\webtest\\img\\1.png&quot; 或完整的网络地址（唯一路径也是绝对路径）&quot;https://cdn.freecodecamp.org/curriculum/cat-photo-app/lasagna.jpg&quot; 。\n列表Web 上的许多内容都是列表，HTML 有一些特别的列表元素。标记列表通常包括至少两个元素。最常用的列表类型为：\n\n无序列表（Unordered List）中项目的顺序并不重要，就像购物列表。用一个&lt;ul&gt;元素包围。\n有序列表（Ordered List）中项目的顺序很重要，就像烹调指南。用一个&lt;ol&gt;元素包围。\n\n列表的每个项目用一个列表项目（List Item）元素&lt;li&gt;包围。下面是我们在CatPhotoApp中需要用到的两种列表：\n&lt;h3>Top 3 things cats love:&lt;/h3>\n&lt;ul>\n    &lt;li>cat nip&lt;/li>\n    &lt;li>laser pointers&lt;/li>\n    &lt;li>lasagna&lt;/li>\n&lt;/ul>\n&lt;h3>Top 3 things cats hate:&lt;/h3>\n&lt;ol>\n    &lt;li>flea treatment&lt;/li>\n    &lt;li>thunder&lt;/li>\n    &lt;li>other cats&lt;/li>\n&lt;/ol>\n\n超链接要植入一个链接，我们需要使用一个简单的元素 — &lt;a&gt;— a 是 “anchor” （锚）的缩写。\n&lt;a href=\"Free Cat Photo App\">cat photos&lt;/a>\n\n注意：如果网址开始部分省略了 https:// 或者 http://，可能会得到错误的结果。在完成一个链接后，可以试着点击它来确保指向正确。\n表单相关元素表单元素也是在这个任务中我掌握最薄弱的一块，尤其是一开是方框左上角嵌入标题让我懵了一下，后来才知道&lt;legend&gt;标签直接可以在&lt;fieldset&gt;嵌入标题。\n\n下面是整个CatPhotoApp中需要掌握的表单元素的使用\n&lt;form action=\"https://freecatphotoapp.com/submit-cat-photo\" method=\"post\">\n        &lt;fieldset>\n            &lt;legend>Is your cat an indoor or outdoor cat?&lt;/legend>\n            &lt;label>&lt;input id=\"indoor\" type=\"radio\" name=\"indoor-outdoor\" value=\"indoor\" checked> Indoor&lt;/label>\n            &lt;label>&lt;input id=\"outdoor\" type=\"radio\" name=\"indoor-outdoor\" value=\"outdoor\"> Outdoor&lt;/label>\n        &lt;/fieldset>\n        &lt;fieldset>\n            &lt;legend>What's your cat's personality?&lt;/legend>\n            &lt;input id=\"loving\" type=\"checkbox\" name=\"personality\" value=\"loving\" checked> &lt;label\n                for=\"loving\">Loving&lt;/label>\n            &lt;input id=\"lazy\" type=\"checkbox\" name=\"personality\" value=\"lazy\"> &lt;label for=\"lazy\">Lazy&lt;/label>\n            &lt;input id=\"energetic\" type=\"checkbox\" name=\"personality\" value=\"energetic\"> &lt;label\n                for=\"energetic\">Energetic&lt;/label>\n        &lt;/fieldset>\n        &lt;input type=\"text\" name=\"catphotourl\" placeholder=\"cat photo URL\" required>\n        &lt;button type=\"submit\">Submit&lt;/button>\n&lt;/form>\n\n\nform：表单中action属性，是将用户的信息收集后传送至对应页面进行处理，通常是包含服务方脚本的URL。如果为空则表示向当前页面提交。method：指出表单数据提交的方式。有两个可能值：\nGET：将表单数据附加在请求中的URL上（默认方式）。\nPOST：将表单数据封装在发送到服务器的请求中，比get方式安全。\n\n\nfieldset: 这是用于将相关的表单元素组织在一起的标签。每个字段集可以有一个 legend 元素，用于提供关于字段集内容的标题或说明。\ninput：单行文本输入框、单选框、复选框、按钮等元素\ntype：input的类型\ntext：文本输入框（明文输入）\npassword：文本输入框（密文输入）\nradio：单选框\ncheckbox：复选框\nbutton：按钮\nreset：重置\nsubmit：提交表单数据给服务器\nfile：文件上传\n\n\nreadonly：只读\ndisabled：禁用\nchecked：默认被选中，只有当type为radio或checkbox时可用\nautofocus：当页面加载时，自动聚焦\nname：名字\nvalue：取值\n\n\nbutton：实现按钮效果\n普通按钮（type&#x3D;button）：使用value属性设置按钮文字\n重置按钮（type&#x3D;reset）：重置它所属form的所有表单元素（包括input、textarea、select）\n提交按钮（type&#x3D;submit）：提交它所属form的表单数据给服务器（包括input、textarea、select）\n\n\nlabel元素一般跟input配合使用，用来表示input的标题labe可以跟某个input绑定，点击label就可以激活对应的input变成选中\n\n\n后记以上就是根据freeCodeCamp（🔥）-CatPhotoApp闯关写下的Html学习笔记，以下是具体的完整代码|完整实现页面。\n之后我会继续在freeCodeCamp（🔥）进行实践，感兴趣的友友们可以和我一起哟！\n","slug":"69关打通Html基础（freeCodeCamp（🔥）实践笔记之CatPhotoApp）","date":"2023-08-27T06:57:33.000Z","categories_index":"Frontend","tags_index":"Html,freeCodeCamp","author_index":"KKfrank"},{"id":"b32478a9812ff68e333c44fb1b05246e","title":"【C语言】指针数组","content":"定义指针数组定义的一般形式是：    类型标识符  *数组名[数组长度]；数组名前缀“*”,表示定义的数组是一个指针数组。例如  int *p[10];即定义了数组p是指针数组。数组p的每个元素是指针类型，存储int型变量的地址。\n与数组指针区分指针数组 *p[n]指针数组：是数组——装着指针的数组。数组指针 (*p)[n]数组指针：是指针——指向数组的指针。\n例题进阶#include&lt;stdio.h>\nint main()\n&#123;\n\tchar *name[3] = &#123;\"zhao\",\"qian\",\"sun\"&#125;;\n\tchar **p = name;\n\tprintf(\"%s\\n\",*p);\n\tprintf(\"%s\\n\",name[0]);\n\tprintf(\"%c\\n\",*name[0]);\n\tprintf(\"%c\\n\",**p);\n\treturn 0;\n&#125;\n\n\n    \n\n\n上面那串代码关于name这个指针数组，我们不难得出\n\n\n\nname[i]\n*name[i]\n\n\n\nname[0]\n“zhao”\n\n\nname[1]\n“qian”\n\n\nname[2]\n“sun”\n\n\n那么我这里有个问题，为什么我们要使用**p这个二级指针，为什么name[0]明明是一个指针变量却可以输出为”zhao”?接下来我会用下面这个例子带大家解决上述疑问，揭开数组指针的神秘面纱。\n#include&lt;stdio.h>\nint main()\n&#123;\n//代码块1\n\tchar *q = \"abcd\";\n\tprintf(\"%s\",q);\n\tprintf(\"%c\",*q);\n//代码块2\n\tchar *q,a[5] = \"abcd\";\n\tq = a;\n\tprintf(\"%s\",q);\n\tprintf(\"%c\",*q);\n\treturn 0;\n&#125;\n\n\n    \n\n\n\n上述代码块1是直接用指针来接受字符串，指针q直接指向”abcd”的首地址，代码块2是用指针来指向字符数组a，，通过指向a的首地址从而实现对字符串的操作。那么我们上面数组指针中的name[0]就相当于这里的指针q，这样对于name[0]的输出是不是明了许多。而二级指针p相当于p指向数组name，所以name[0]就相当于是p，*name[0]不就是**p吗？\n","slug":"【C语言】指针数组","date":"2023-08-22T05:33:41.000Z","categories_index":"Programming","tags_index":"C,pointer","author_index":"KKfrank"},{"id":"c254c3de9a43c14a77c3a256b80a7bea","title":"【C语言】函数的传参","content":"传参的方式\n\n\n\n\n\n\n\n\n一般在我们C语言中常用的是三种传参方式：传值、传址和引用传递\n传值传值我们也常称作值传递，是我们一开始接触函数就学习的一中传参方式。意思也很好理解，就是指在调用函数时将实际参数复制一份传递到函数中，函数中传入的参数称作传参，这样将不会影响到实际参数。要注意的是实参可以是常量、变量、表达式，形参只能是变量；传参只有在函数被调用时才会被分配内存，所以在函数中如果对参数进行修改，函数中传入的参数称作传参，将不会影响到实际参数。下面这个代码也是老师必定会在上课时给我们看的，对理解传参和形参很有帮助。\n#include&lt;stdio.h>\nvoid swap(int a, int b)&#123;\n    int temp;\n    temp = a;\n    a = b;\n    b = temp;\n    pirntf(\"swap : a = %d,b = %d\\n\",a,b);\n&#125;\nint main()&#123;\n    int a, b;\n    a = 2;\n    b = 3;\n    swap(a, b);\n    printf(\"main : a = %d,b = %d\\n\",a,b);\n    return 0;\n&#125;\n\n\n\n我们可以看到，a和b在进行交换之前，他们的值分别为2和3，而进行交换操作之后，它们的值仍为2和3，但是在函数swap内部我们可以看到a和b的值确实发生过了交换。也就是说明了传参的改变并不会影响到实参。从这样看来似乎我们这个函数好像没用啊，那接下来就由我们的传址出场。\n传址传址也就是地址传递，与值传递的不同在于，它把实参的存储地址传送给形参，使得形参指针和实参指针指向同一块地址。因此，被调用函数中对形参指针所指向的地址中内容的任何改变都会影响到实参。那么再让我们用传址的方式来写一下上面的交换函数。\n#include&lt;stdio.h>\nvoid swap(int *a, int *b)&#123;\n    int temp;\n    temp = *a;\n    *a = *b;\n    *b = temp;\n    printf(\"a = %d,b = %d\\n\",a,b);\n    printf(\"a = %d,b = %d\\n\",*a,*b);\n&#125;\nint main()&#123;\n    int a, b;\n    a = 2;\n    b = 3;\n    printf(\"交换前：a = %d,b = %d\\n\",&amp;a,&amp;b);\n    swap(&amp;a, &amp;b);\n    printf(\"交换后：a = %d,b = %d\\n\",a,b);\n    printf(\"交换后：a = %d,b = %d\\n\",&amp;a,&amp;b);\n&#125;\n\n\n从上述代码的输出结果可以发现。通过指针，地址传递我们成功实现了两个数的交换，而且传入的地址在swap函数和main函数中没有发生任何改变。\n引用传参引用传递是以引用为参数，则既可以使得对形参的任何操作都能改变相应数据，又使函数调用方便。引用传递是在形参调用前加入引用运算符“&amp;”。引用为实参的别名，和实参是同一个变量，则他们的值也相同，该引用改变则它的实参也改变。引用传参主要出现在C++的编程当中，大家如果对此不怎么熟悉的话，用下面这串代码可以帮助理解。\n#include &lt;iostream>\nusing namespace std;\nvoid swap(int &amp;a,int &amp;b)//&amp;不是取地址的意思\n&#123;\n\tint temp = a;\n\ta = b;\n\tb = temp;\n&#125;\nint main()\n&#123;\n//引用传递\n\tint a = 2;\n\tint b = 3; \n\tswap(a,b); //形参会修饰实参\n\tcout &lt;&lt; \"引用传递\" &lt;&lt; endl;\n\tcout &lt;&lt; \"a=\" &lt;&lt; a &lt;&lt; endl;\n\tcout &lt;&lt; \"b=\" &lt;&lt; b &lt;&lt; endl;\n\treturn 0;\n//! 传引用的实参和形参是双向传递\n&#125;\n","slug":"【C语言】函数的传参","date":"2023-08-21T11:14:19.000Z","categories_index":"Programming","tags_index":"C","author_index":"KKfrank"},{"id":"24fa9010f69884222a96dea85a564a6c","title":"【C语言】指针的运算规则","content":"\n\n\n\n\n\n\n\n\n从根本上看，指针（pointer）是一个值为内存地址的变量（或数据对象），正如char类型变量的的值是字符，int类型变量的值是整数，指针变量的值是地址。那么作为一个有值的变量就一定有运算，今天我们就来揭开指针运算规则的面纱。\n指针±正整数我们的系统中，地址按字节编址，int类型占2字节，double类型占8字节。在C中，指针加1指的是增加一个存储单元。对数组而言，加一意味着地址是下一个元素的地址。所以数组的表示法也是在变相地使用指针，单个数组名指的就是该数组的首地址。\n指针-指针可以计算两个指针的差值。通常，求差的两个指针分别指向同一个数组的不同元素，通过计算求出两元素之间的距离。差值的单位与数组类型的单位相同。我们可以用如下的程序来帮助理解以上的指针运算法则。\n#include &lt;stdio.h>\n\nint main() &#123; \n    int a[5] = &#123;1,2,3,4,5&#125;;\n    int *p1,*p2,*p3,*p4;\n    \n    p1 = a;\t//将数组首地址赋给指针\n    p2 = &amp;a[2];\t//将数组中第三个元素的地址赋给指针\n    \n    //指针加正整数\n    p3 = p1 + 4;\n    printf(\"p1 = %p , p3 = %p , *p3 = %d\\n\", p1,p3,*p3);\n\t//指针减正整数\n\tp4 = p2 - 1;\n\tprintf(\"p2 = %p , p4 = %p , *p4 = %d\\n\", p2,p4,*p4);\n\t//指针-指针\n\tprintf(\"%d\\n\",p3 - p4);\n\t\n\treturn 0;\n&#125;\n\n程序运行结果如下图所示：\n指针+指针有些人可能会想了既然有指针-指针，那会不会有指针+指针呢？（其实我一开始也是这个有些人之一）答案是指针+指针是没有意义的。那么这到底是为什么呢？我们来思考一下，如果存在如上的p3,p4两个指针变量，两者相减是只两者所指向的数组的元素距离，那两者相加难道是数组元素距离之和，那显然没什么意义。就拿生活中的家庭门牌号举例：“门牌号161-门牌号160&#x3D;1”是指两家相差一户，那“门牌号161-门牌号160&#x3D;321”难道指两家合起来有321户？显然不是。所以指针相加是没有意义滴。\n指针的关系运算（比较大小）关系运算：&lt; &lt;&#x3D; &gt; &gt;&#x3D; 是有意义的。不过前提是它们都指向同一个数组中的元素。根据你所使用的操作符，比较表达式将告诉你哪个指针指向数组中更前或更后的元素。标准并未定义如果两个任意的指针进行比较会产生什么结果（一般情况下就不要用了）。\n","slug":"【C语言】指针的运算规则","date":"2023-08-21T07:23:40.000Z","categories_index":"Programming","tags_index":"C,pointer","author_index":"KKfrank"},{"id":"f21bf18a9f5ba2d3dd5aab9bcba54a92","title":"I do not know where to go,but I have been on the road","content":"\n\n\n\n\n\n\n\n\nI do not know where to go,but I have been on the road.我不知道将去何方，但我已在路上。\n不管前方的路有多苦，只要走的方向正确，不管多么崎岖不平，都比站在原地更接近幸福。\n一条路不能回头，就是一生要走许多路，有成长之路。很多事情不能自己掌控，即使再孤单再寂寞，仍要继续走下去，不许停也不能回头。\n这世上有一条路无论如何也不能走，那就是歧途，只要走错一步结果都会是粉身碎骨。\n路我就陪你走到这里了，过去的日子很开心，以后可能没有人像我对你这么好了，别哭哦。你说过要去更高的地方，那就继续跑吧，千万别停下，风景再好看也不要停下了。记住你答应过自己的，一直往前走，别回头。\n再漫长的故事，也有完结的时候，行驶得再慢的列车，也有一个又一个的站台；再亲密无间的旅伴，也有分开的时候。旅途上经历的事情，可能会被我们遗忘；旅途上学到的东西，我们却会将它记在心间。——宫崎骏《千与千寻》\n《千与千寻》是很多人小时候的记忆，也是很多人想重看一遍的电影。这个暑假我又双叒叕看了这部电影。小时候可能觉得可怕的无脸男然而事实是我们每个人都会有这样那样的时候孤独地等待着一个拥抱；小时候坚信白龙和千寻会再相逢,长大了才明白松手说了的再见,就可能真的再也不见;小时候不明白小火车为什么只去不回,这条叫“成长”的路,我们都走过，只能往前，无法回头。\n\n    \n\n\n宫崎骏的动漫电影总是流露着孩童般的天真，但不经意间透露出人生简单而深刻的哲理。这里的纯真自然是每个人在这个复杂的时代中所苦苦去追寻的，而在观看电影的时刻却可以短暂地得到，我想这也是吸引很多人的地方，也是电影与人共鸣之处。\n小时候，无论我们去哪总有家人在身旁陪伴，为你解决后顾之忧，为你指明前方道路所向。而如今，我们走过了这条叫做成长的路，独自置身于喧嚣内卷的社会，成年人的世界哪有那么轻松，可是我们却不能停下脚步，身处于这个时代的漩涡中，我们像一颗小小的齿轮被无情地带动，身边已经有不少朋友开始摆烂，我们也逐渐迷茫，对于前方有着什么，我们充满焦虑，但是无论最终到达哪里，我们都应该勇敢的迈出脚步不是吗？\n走过苦路，迷失过方向，经过岁月的洗礼，或许才能沉淀出我们人生的意义。但很可惜的是，有很多时候我们并不知道走的方向是不是正确的，即使如此我们也没有退路，不管前方有着什么，也不知道要去哪里，但我们不是已经在路上了吗？走在路上，看向前方，不去后悔曾走过的路，这何尝不是我们的一种幸福。\nI do not know where to go,but I have been on the road.\n","slug":"I-do-not-know-where-to-go-but-I-have-been-on-the-road-0","date":"2023-08-20T06:57:53.000Z","categories_index":"Live","tags_index":"宫崎骏,《千与千寻》","author_index":"KKfrank"},{"id":"9ce38db2b1f7bb787dfd5d8db59105c9","title":"【Latex】Texlive镜像安装问题解决open","content":"\n\n\n\n\n\n\n\n\nLatex 作为撰写论文的工具，深受广大科研工作者的喜爱，它是一种所见非所得的论文撰写方式（可以用代码来写论文），今天主要分享我们在安装 Texlive 镜像时的问题，毕竟安装是使用的第一步。没有安装配置好环境，使用免谈。\n问题描述在 CSDN 上都能够找到各种安装的教程，大家可以参照安装，但我在安装镜像时发生了如下问题，一脸懵逼，一开始都是按照教程来的，不知道问题出在何处\n\n\n\n\n\n\n\n\n\nopen(&gt;C:\\Users\\x{00b6}\\x{00a1}\\x{00c3}ú\\x{00d1}\\x{00f4}\\AppData\\Local\\Temp\n问题解决后来发现原因竟然是我一开始的用户名设置为中文，相信这也是很多小伙伴一开始在买到电脑时配置的一种选择吧，但再后来的使用中你会发现中文麻烦确实多。那回到我们这次的问题，我们先右键计算机（我的电脑）-&gt;属性-&gt;高级设置-&gt;环境变量，在上半部分的用户变量中找到 Temp 和 Tmp，将变量的值设置为%SystemRoot%\\TEMP，这样就能按照网上的教程正常安装了\n\n\n希望大家都能在看了本次分享后都能成功解决问题，如果有其他的问题也可以在评论区留言或私信哦。\n","slug":"latex","date":"2023-08-20T05:58:36.000Z","categories_index":"Software","tags_index":"Latex","author_index":"KKfrank"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new \"My New Post\"\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2023-08-15T11:41:28.843Z","categories_index":"Software","tags_index":"Hexo","author_index":"KKfrank"}]